// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String? @unique
  phone    Int?    @unique
  password String
  role     String  @default("USER")

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  profile_image  String?
  bio            String?
  gender         String
  verifiedEmail  Boolean    @default(false)
  verifiedNumber Boolean    @default(false)
  superAccount   Boolean    @default(false)
  post           Post[]
  likes          Likes[]
  followers      Follow[]   @relation("followers")
  following      Follow[]   @relation("following")
  watched_post   ViewPost[]
  Comment        Comment[]
}

model Follow {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  follower   User @relation("followers", fields: [followerId], references: [id])
  followerId Int

  following   User @relation("following", fields: [followingId], references: [id])
  followingId Int
}

model Post {
  id          Int       @id @default(autoincrement())
  description String
  owner       User      @relation(fields: [ownerId], references: [id])
  ownerId     Int
  content     String[]
  thumbnail   String?
  published   Boolean   @default(false)
  tags        String[]
  createAt    DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  likes    Likes[]
  ViewPost ViewPost[]
  Comment  Comment[]
}

model Comment {
  id      Int    @id @default(autoincrement())
  message String

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  Post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model Likes {
  id Int @id @default(autoincrement())

  post   Post @relation(fields: [postId], references: [id])
  postId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([userId, postId])
}

model ViewPost {
  id Int @id @default(autoincrement())

  post   Post @relation(fields: [postId], references: [id])
  postId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())

  @@unique([userId, postId])
}
